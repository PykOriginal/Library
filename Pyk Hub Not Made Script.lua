--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (4==v18) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v31=0 + 0 ;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v31==4) then while true do if ((1 + 0)~=v32) then else local v87=0 + 0 ;while true do if (v87~=0) then else v35=nil;v36=nil;v87=1 + 0 ;end if (v87~=(123 -(77 + 45))) then else v32=2;break;end end end if (v32~=2) then else local v88=0;while true do if (v88==(3 -2)) then v32=209 -(28 + 178) ;break;end if (v88==0) then v37=nil;v38=nil;v88=1;end end end if (v32==0) then v33=0 + 0 ;v34=nil;v32=1;end if (v32~=3) then else v39=nil;while true do local v89=0;local v90;while true do if (v89~=(0 + 0)) then else v90=0 -0 ;while true do if (v90==(2 -1)) then if (v33~=(238 -(96 + 141))) then else v38=v24();v39={};for v115=1,v38 do local v116=0 -0 ;local v117;local v118;local v119;local v120;while true do if (0~=v116) then else v117=0 + 0 ;v118=nil;v116=1;end if (v116==1) then v119=nil;v120=nil;v116=2;end if (v116==(1824 -(1002 + 820))) then while true do if ((1 + 0)==v117) then v120=nil;while true do if (v118==1) then if (v119==(1 + 0)) then v120=v22()~=0 ;elseif (v119==(2 + 0)) then v120=v25();elseif (v119==3) then v120=v26();end v39[v115]=v120;break;end if (v118==0) then local v128=0 + 0 ;local v129;while true do if (v128~=(0 -0)) then else v129=0 -0 ;while true do if (v129==0) then v119=v22();v120=nil;v129=1;end if (1==v129) then v118=1144 -(758 + 385) ;break;end end break;end end end end break;end if (v117==(1123 -(182 + 941))) then local v126=0;while true do if (v126==(1 + 0)) then v117=1;break;end if (0==v126) then v118=1779 -(1315 + 464) ;v119=nil;v126=4 -3 ;end end end end break;end end end v37[3 + 0 ]=v22();v33=6 -4 ;end break;end if (v90==0) then local v112=0 -0 ;while true do if ((289 -(93 + 195))==v112) then v90=1;break;end if (v112~=0) then else if (v33~=0) then else local v121=0 -0 ;while true do if (v121~=2) then else v33=1 + 0 ;break;end if ((1 -0)~=v121) then else v36={};v37={v34,v35,nil,v36};v121=2;end if (v121==(0 -0)) then v34={};v35={};v121=1;end end end if (v33==(3 -1)) then local v122=0 -0 ;while true do local v125=599 -(25 + 574) ;while true do if (v125~=(0 + 0)) then else if (v122~=(1 -0)) then else for v130=3 -2 ,v24() do v36[v130]=v24();end return v37;end if (v122~=0) then else for v132=1,v24() do local v133=0;local v134;local v135;while true do if (v133~=(3 -2)) then else while true do if (v134==(0 -0)) then v135=v22();if (v21(v135,1 + 0 ,3 -2 )==(0 + 0)) then local v270=0;local v271;local v272;local v273;local v274;local v275;while true do if (v270~=1) then else v273=nil;v274=nil;v270=2;end if (v270~=0) then else v271=1467 -(1447 + 20) ;v272=nil;v270=1 + 0 ;end if ((9 -7)~=v270) then else v275=nil;while true do if (v271==1) then local v313=0 -0 ;while true do if (v313~=(1 + 0)) then else v271=2 -0 ;break;end if (v313==0) then v274=nil;v275=nil;v313=2 -1 ;end end end if (v271~=(754 -(473 + 281))) then else local v314=0;while true do if (v314==1) then v271=1;break;end if (v314==0) then v272=0 + 0 ;v273=nil;v314=1;end end end if ((2 + 0)~=v271) then else while true do if (v272==0) then local v321=0;local v322;while true do if (v321~=(392 -(339 + 53))) then else v322=0 -0 ;while true do if (v322~=0) then else local v342=0;local v343;while true do if (v342~=(0 -0)) then else v343=1945 -(1923 + 22) ;while true do if (v343==(1 + 0)) then v322=1 -0 ;break;end if ((0 -0)==v343) then local v353=0;while true do if (v353~=1) then else v343=1970 -(1295 + 674) ;break;end if (v353==(0 + 0)) then v273=v21(v135,1487 -(1339 + 146) ,3);v274=v21(v135,4,6);v353=2 -1 ;end end end end break;end end end if (v322~=1) then else v272=347 -(272 + 74) ;break;end end break;end end end if (v272~=(7 -4)) then else if (v21(v274,3,6 -3 )==(1 + 0)) then v275[4]=v39[v275[4]];end v34[v132]=v275;break;end if ((1819 -(1325 + 492))~=v272) then else local v324=163 -(55 + 108) ;local v325;while true do if (v324~=0) then else v325=0;while true do if (v325~=(2 -1)) then else v272=1471 -(266 + 1202) ;break;end if (0==v325) then local v344=0;local v345;while true do if (v344~=0) then else v345=0;while true do if ((531 -(378 + 153))==v345) then local v354=0 -0 ;while true do if (v354==1) then v345=2 -1 ;break;end if (v354==(877 -(872 + 5))) then if (v21(v274,3 -2 ,1)~=1) then else v275[2 -0 ]=v39[v275[7 -5 ]];end if (v21(v274,6 -4 ,2 + 0 )==1) then v275[3]=v39[v275[3 + 0 ]];end v354=1 + 0 ;end end end if (v345==(861 -(312 + 548))) then v325=1;break;end end break;end end end end break;end end end if ((1 + 0)~=v272) then else local v326=0 + 0 ;local v327;while true do if ((0 -0)~=v326) then else v327=0 -0 ;while true do if (v327==(1386 -(1345 + 41))) then local v346=0;while true do if (v346==1) then v327=1;break;end if (v346==0) then v275={v23(),v23(),nil,nil};if (v273==(0 + 0)) then local v347=0 + 0 ;local v348;local v349;while true do if (v347~=(2 -1)) then else while true do if (v348~=(0 + 0)) then else v349=0 -0 ;while true do if (v349==(1663 -(151 + 1512))) then v275[3]=v23();v275[4]=v23();break;end end break;end end break;end if (v347~=0) then else v348=0 + 0 ;v349=nil;v347=2 -1 ;end end elseif (v273==1) then v275[10 -7 ]=v24();elseif (v273==2) then v275[3]=v24() -((310 -(124 + 184))^(30 -14)) ;elseif (v273==(968 -(757 + 208))) then local v361=0;local v362;local v363;local v364;while true do if (v361~=(1 + 0)) then else v364=nil;while true do if (v362~=(15 -(6 + 9))) then else v363=0;v364=nil;v362=1;end if (v362==(1 + 0)) then while true do if (v363~=0) then else v364=0 + 0 ;while true do if (v364==(0 + 0)) then v275[3]=v24() -(2^16) ;v275[17 -13 ]=v23();break;end end break;end end break;end end break;end if (v361==(0 + 0)) then v362=0 -0 ;v363=nil;v361=1 -0 ;end end end v346=1 -0 ;end end end if (v327==(1 -0)) then v272=2;break;end end break;end end end end break;end end break;end end end break;end end break;end if (v133==0) then v134=0;v135=nil;v133=1;end end end for v136=1,v24() do v35[v136-(1 + 0) ]=v29();end v122=1;end break;end end end end v112=1;end end end end break;end end end break;end end break;end if (2==v31) then v36=nil;v37=nil;v31=858 -(9 + 846) ;end if (3~=v31) then else v38=nil;v39=nil;v31=4;end if (v31==0) then v32=0 -0 ;v33=nil;v31=1862 -(1040 + 821) ;end if (v31==(1329 -(925 + 403))) then v34=nil;v35=nil;v31=1 + 1 ;end end end v18=5;end if (v18==5) then v30=nil;function v30(v40,v41,v42)local v43=0;local v44;local v45;local v46;while true do if (v43==0) then v44=v40[1];v45=v40[2];v43=1;end if (v43==1) then v46=v40[3];return function(...)local v77=0;local v78;local v79;local v80;local v81;local v82;while true do if (v77==3) then A,B=v28(v11(v82));if  not A[1] then local v103=0;local v104;while true do if (v103==0) then v104=v40[4][v78] or "?" ;error("Script error at ["   .. v104   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (v77==1) then v80={...};v81=v12("#",...) -1 ;v77=2;end if (v77==2) then v82=nil;function v82()local v93=v44;local v94=v45;local v95=v46;local v96=v28;local v97={};local v98={};local v99={};for v105=0 + 0 + 0 ,v81 do if (((187 + 4095)==((15140 -9487) -(1093 + 278))) and (v105>=v95)) then v97[v105-v95 ]=v80[v105 + 1 + 0 ];else v99[v105]=v80[v105 + 1 + 0 ];end end local v100=(v81-v95) + (1 -0) ;local v101;local v102;while true do local v106=0;local v107;while true do if ((v106==(1853 -(785 + 1068))) or ((7417 -5013)==514)) then v107=0;while true do if ((v107==(0 -0)) or (1783<815)) then local v114=0;while true do if ((v114==(3 -2)) or (3040>=((7929 -2303) -(711 + 1036)))) then v107=857 -(697 + 159) ;break;end if ((v114==(0 + 0 + 0)) or ((1104 -(244 + 250 + 311))>(2218 -(990 + 780)))) then v101=v93[v78];v102=v101[(3 + 1) -3 ];v114=2 -1 ;end end end if ((v107==1) or (3820<=(2379 + 924))) then if ((v102<=(1 + 17)) or (((3324 -1249) + 1733)<=(7156 -3810))) then if (((1346 + 257)<=(3581 + 1388)) and (v102<=(32 -24))) then if ((v102<=(8 -5)) or (4862<2443)) then if ((v102<=(1 + (0 -0))) or ((853 + 2571)<(2513 -(208 + (1707 -(230 + 547)))))) then if (((1654 + 2090)>(1523 + 830)) and (v102>(0 -0))) then if (((4931 -(1038 + 99 + 562))<((5378 -(474 + 139)) -(347 + 7))) and (v99[v101[1 + 1 ]]==v99[v101[725 -(535 + 138 + 48) ]])) then v78=v78 + (2 -1) ;else v78=v101[513 -(437 + 73) ];end elseif (((4045 -(12 + 164))==((4587 -(61 + 462)) -(186 + (19 -10)))) and (v99[v101[2]]==v101[5 -1 ])) then v78=v78 + 1 + 0 + 0 ;else v78=v101[1760 -(749 + 1008) ];end elseif ((v102==(6 -4)) or ((1370 -(57 + 357))==((4876 + 703) -3426))) then if ((((1579 + 4693) -(292 + 579 + 608))>=664) and  not v99[v101[2]]) then v78=v78 + 1 + 0 ;else v78=v101[3 + 0 ];end else v99[v101[2]]=v99[v101[1 + 2 ]][v101[4]];end elseif (((1436 -854)==(864 -282)) and (v102<=(4 + 1))) then if ((v102==(1865 -(1757 + 104))) or (((23867 -10663) -9757)==((2606 -(363 + 2)) -(1226 + 322)))) then local v140=0 -0 ;local v141;local v142;local v143;local v144;local v145;while true do if ((v140==(1829 -(1534 + 293))) or ((3494 -(203 + 802))>=(5133 -(545 + 205)))) then v145=nil;while true do if ((v141==((866 -(536 + 330)) -0)) or ((2403 + 991)<=(11223 -8049))) then local v241=0 + 0 ;while true do if (((723 + 3005)<(5581 -(481 + 153))) and (1==v241)) then v141=1;break;end if ((((2047 + 2757) -(792 + 859))>=(1780 -(3380 -2091))) and (v241==0)) then v142=v101[2 + 0 ];v143,v144=v96(v99[v142](v13(v99,v142 + (1 -0) ,v101[6 -3 ])));v241=617 -(282 + 334) ;end end end if (((1732 + 1724)>(2673 + 399)) and (v141==(1 -0))) then local v242=0 -(0 + 0) ;while true do if (((4962 -3296)<=(7048 -3519)) and ((0 + 0)==v242)) then v79=(v144 + v142) -(469 -(83 + 385)) ;v145=1204 -(52 + 1078 + 74) ;v242=1 + (0 -0) ;end if ((v242==(1724 -(1320 + 403))) or (4429<=(1635 -668))) then v141=486 -(4 + 16 + (928 -464)) ;break;end end end if ((v141==(1 + 1)) or ((873 + 1557)>3591)) then for v259=v142,v79 do local v260=0 -0 ;while true do if ((((4138 -(13 + 8)) -(267 + 51))>((7239 + 890) -5330)) and (v260==(0 -0))) then v145=v145 + (2 -1) ;v99[v259]=v143[v145];break;end end end break;end end break;end if (((1227 + 1359)<=((3467 -(297 + 622)) + 470)) and ((1 + 0)==v140)) then v143=nil;v144=nil;v140=7 -5 ;end if ((v140==0) or ((2046 + 830)<(3385 -(731 + 261)))) then v141=0 + 0 ;v142=nil;v140=1871 -(348 + 1522) ;end end else local v146=v101[3 -1 ];local v147=v101[4];local v148=v146 + 2 ;local v149={v99[v146](v99[v146 + 1 + 0 ],v99[v148])};for v196=1922 -(988 + 933) ,v147 do v99[v148 + v196 ]=v149[v196];end local v150=v149[1242 -(118 + 1123) ];if (((1926 -1170)<(254 + 1102)) and v150) then local v202=1439 -(240 + 1199) ;while true do if (((432 + 996)>(2004 -864)) and (v202==(0 -0))) then v99[v148]=v150;v78=v101[1 + 2 ];break;end end else v78=v78 + (3 -2) ;end end elseif ((203<=(603 + 1180)) and (v102<=(22 -16))) then v41[v101[2 + 1 ]]=v99[v101[2]];elseif ((v102>(538 -((1445 -976) + 62))) or (4523<239)) then local v203=0 -0 ;local v204;local v205;while true do if (((1974 + 2191)>(5238 -3487)) and (v203==(1 + 0))) then while true do if (((2480 -1074)<(11094 -(12696 -5880))) and (v204==(0 -0))) then v205=v101[2 -0 ];v99[v205](v99[v205 + (1826 -(1560 + 265)) ]);break;end end break;end if (((1537 -(85 + (320 -98)))<(815 + 17 + 691)) and (v203==(0 + 0))) then v204=0 + 0 ;v205=nil;v203=1 + 0 + 0 ;end end else v78=v101[173 -(88 + 82) ];end elseif ((v102<=13) or (4223<(1133 -((1668 -(979 + 416)) + 638)))) then if ((((4949 + 975) -(183 + 826))>=2345) and (v102<=(4 + 6))) then if ((v102>((6 + 5) -2)) or (((20122 -11116) -5263)<=(3179 -(850 + 150)))) then v99[v101[2 + 0 ]][v101[1221 -(1123 + (1284 -(895 + 294))) ]]=v101[644 -(155 + 485) ];else v99[v101[2]]=v99[v101[1041 -(805 + 233) ]] -v101[1 + 3 ] ;end elseif (((5344 -(717 + 888))==(12793 -9054)) and (v102<=(361 -(322 + 28)))) then local v156=0 -0 ;local v157;local v158;local v159;while true do if (((5886 -(193 + 695))>(771 + 1910)) and (v156==1)) then v159=0 -0 ;for v231=v157,v101[5 -1 ] do local v232=0 + 0 ;local v233;while true do if (((0 -0)==v232) or ((2007 + 1402)<=(2507 -(126 + 303 + 46 + 17)))) then v233=0 -0 ;while true do if ((((7418 -2388) -(300 + 105))>=3231) and (v233==((0 + 0) -(0 -0)))) then v159=v159 + (2 -1) ;v99[v231]=v158[v159];break;end end break;end end end break;end if (((394 + 1041)<=((8783 -6383) + 1311)) and ((0 + 0)==v156)) then local v225=0 + 0 ;while true do if ((v225==(0 + 0)) or ((42 + 86)>1974)) then v157=v101[1663 -(777 + 884) ];v158={v99[v157](v13(v99,v157 + 1 ,v79))};v225=1;end if ((v225==(1099 -(329 + 769))) or ((622 + (2034 -(169 + 179)))>=4200)) then v156=(1866 -(1666 + 199)) + 0 ;break;end end end end elseif (((3434 -(212 + 1296))>=(3578 -2049)) and (v102==(26 -14))) then local v207=1116 -(230 + 886) ;local v208;local v209;local v210;while true do if ((v207==(3 -2)) or ((2565 + 313)>=(3327 -(53 + 394)))) then local v238=163 -(32 + 131) ;while true do if ((v238==0) or (486==(3297 -1010))) then v210={};v209=v10({},{__index=function(v285,v286)local v287=0 -0 ;local v288;local v289;local v290;while true do if (((2698 -1422)<=(6491 -3700)) and (v287==(1 + 0))) then v290=nil;while true do if (((3425 -((72 -48) + (1766 -1094)))==(9951 -7222)) and (v288==(1 -0))) then while true do if ((v289==(0 -0)) or ((3927 -2633)==(8867 -4487))) then local v333=0 + 0 ;while true do if ((((2628 -(67 + 287)) + 1199)<=(15190 -11089)) and ((0 -0)==v333)) then v290=v210[v286];return v290[(246 + 16) -(88 + 173) ][v290[2]];end end end end break;end if ((v288==(0 + 0 + 0)) or (2640<=(1899 -(904 + 137)))) then local v317=0 + 0 ;while true do if ((1050<(15050 -10353)) and ((0 + 0)==v317)) then v289=0;v290=nil;v317=1164 -(188 + 975) ;end if ((v317==(1 -0)) or ((2243 + 523 + 379)==83)) then v288=1 + 0 + 0 ;break;end end end end break;end if ((v287==(1060 -(335 + 725))) or ((6604 -3559)<=(5698 -3389))) then v288=0;v289=nil;v287=3 -2 ;end end end,__newindex=function(v291,v292,v293)local v294=0 + 0 ;local v295;local v296;while true do if ((v294==(347 -(163 + 184))) or ((2169 -1384)>=(1312 + 120))) then v295=1789 -(1282 + 507) ;v296=nil;v294=942 -(434 + 507) ;end if ((((1671 -1173) -187)<(3445 -(126 + 376))) and (v294==(463 -(203 + 259)))) then while true do if ((v295==((2933 -1453) -((1541 -(292 + 926)) + 1157))) or ((2177 -(153 + 256))>(2027 + 1425 + 451))) then v296=v210[v292];v296[1 + (0 -0) ][v296[4 -(5 -3) ]]=v293;break;end end break;end end end});v238=1;end if (((3713 -(44 + 54))>=((2442 -(462 + 630)) -((1035 -657) + 239))) and (v238==1)) then v207=650 -(477 + 171) ;break;end end end if (((1744 -(1449 + 295))==v207) or ((5919 -(1097 + 408))==(6109 -(955 + 309)))) then local v239=0 + 0 ;while true do if ((v239==(0 -0)) or ((2431 -(92 + 91))<(161 + 868))) then v208=v94[v101[3]];v209=nil;v239=1;end if ((v239==(1499 -((1427 -(844 + 235)) + 1150))) or ((1415 + 998)==(706 + 373))) then v207=594 -(507 + 86) ;break;end end end if ((v207==(1310 -((1655 -(36 + 1088)) + 777))) or ((1537 -(89 + 529))>(4628 -(548 + 52 + 651)))) then for v244=(4 -3) + (0 -0) ,v101[1045 -(730 + 311) ] do local v245=255 -(42 + 213) ;local v246;while true do if ((2366<(19700 -15702)) and (v245==(0 + 0))) then v78=v78 + ((1095 -(562 + 185)) -(323 + 24)) ;v246=v93[v78];v245=(4 -2) -1 ;end if (((6166 -(1182 + 191))>3470) and (v245==(2 -1))) then if ((v246[4 -3 ]==(1563 -(1142 + 389))) or (1492<=896)) then v210[v244-(1 + 0) ]={v99,v246[4 -1 ]};else v210[v244-(1776 -(896 + 879)) ]={v41,v246[970 -(165 + 802) ]};end v98[ #v98 + 1 + 0 ]=v210;break;end end end v99[v101[2]]=v30(v208,v209,v42);break;end end else local v211=0 -0 ;local v212;local v213;local v214;while true do if ((1243==(1087 + 156)) and (v211==(208 -(102 + 105)))) then v214=nil;while true do if ((v212==(4 -3)) or (3462>(2611 + 897))) then v99[v213 + 1 + 0 ]=v214;v99[v213]=v214[v101[4]];break;end if ((v212==(0 + 0)) or (2018==(2298 + 1043))) then local v281=0 -0 ;while true do if ((v281==0) or (((7881 -(764 + 25)) -3021)<=(3435 -(1411 + 185)))) then v213=v101[2];v214=v99[v101[1 + 2 ]];v281=1 -0 ;end if ((v281==1) or ((1829 -(1304 + 475))>(2752 -(368 + 978)))) then v212=1 + 0 ;break;end end end end break;end if ((v211==(0 -(1138 -(1011 + 127)))) or ((3420 -(402 + 11))<((5094 -(1358 + 442)) -(39 + 955)))) then v212=0 + 0 ;v213=nil;v211=1 + 0 ;end end end elseif ((((2169 -(385 + 1101)) + 2283)>(5172 -2957)) and (v102<=(2 + 13))) then if (((5889 -3796)>(11 + 184)) and (v102>(20 -(1975 -(834 + 1135))))) then if ((v101[5 -3 ]==v99[v101[292 -(108 + 180) ]]) or ((4665 -3406)>(3482 -(34 + 949)))) then v78=v78 + 1 ;else v78=v101[4 -1 ];end else v99[v101[1659 -(1440 + 217) ]]=v42[v101[3]];end elseif (((5307 -1403)>=(5063 -2755)) and (v102<=16)) then local v162=1879 -(1419 + 460) ;local v163;local v164;local v165;local v166;local v167;while true do if ((v162==2) or ((1335 + 2382)<96)) then v167=nil;while true do if ((2181>=2066) and (v163==(2 -1))) then v79=(v166 + v164) -(62 -(46 + 15)) ;v167=0 -0 ;v163=3 -1 ;end if (((471 -(58 + 107))<=(156 + 948)) and ((3 -1)==v163)) then for v261=v164,v79 do local v262=0 -0 ;local v263;while true do if (((0 -0)==v262) or (((16976 -8907) -4825)>(7302 -2867))) then v263=0 -(0 + 0) ;while true do if ((v263==(0 + 0)) or ((3597 -846)<=(3599 -(797 + 114)))) then v167=v167 + ((438 -(118 + 317)) -2) ;v99[v261]=v165[v167];break;end end break;end end end break;end if ((v163==(0 -0)) or (((1914 + 1710) -(1254 + 323))<=936)) then v164=v101[1 + 1 ];v165,v166=v96(v99[v164](v99[v164 + (3 -2) ]));v163=2 -1 ;end end break;end if ((((2391 + 1654) -(876 + 397))<=(6438 -3417)) and (((0 + 0) -0)==v162)) then v163=522 -(376 + 146) ;v164=nil;v162=1;end if ((v162==(2 -1)) or (736==817)) then v165=nil;v166=nil;v162=2 -0 ;end end elseif ((v102==(74 -(245 -188))) or ((7356 -4212)<2271)) then v99[v101[215 -(123 + 90) ]]=v41[v101[(624 -(582 + 41)) + 2 + 0 ]];elseif (((3121 -(120 + 1371))<(3078 + 253)) and (v99[v101[151 -(50 + (251 -152)) ]]~=v99[v101[1454 -(669 + 781) ]])) then v78=v78 + (880 -(306 + 573)) ;else v78=v101[(1 + 8) -6 ];end elseif ((((5187 -(644 + 1342)) + 1716)<(3448 + 1492)) and (v102<=(783 -(726 + 30)))) then if (((7394 -4813)==(138 + 2443)) and (v102<=(1725 -(624 + (1138 -(41 + 18)))))) then if ((2215<=(5882 -(779 + 853))) and (v102<=20)) then if (((2600 -(848 + 898))==(495 + 109 + 250)) and (v102>((76 + 55) -(35 + 42 + 35)))) then local v168=689 -((1959 -1385) + 115) ;local v169;local v170;while true do if ((v168==0) or ((244 + 411)>=(62 + 3091))) then v169=0 + (1802 -(659 + 1143)) ;v170=nil;v168=(1 + 2) -2 ;end if ((v168==(3 -(1 + 1))) or ((11809 -7120)>(4911 -(77 + 48)))) then while true do if ((v169==0) or ((880 + 768)==(11720 -8502))) then v170=v101[3 -1 ];v99[v170]=v99[v170](v99[v170 + 1 + 0 ]);break;end end break;end end elseif ((v101[1014 -(158 + 854) ]<v99[v101[(1221 -(1010 + 209)) + 2 ]]) or ((7322 -(4997 -(60 + 515)))<=((3177 -941) + 348))) then v78=v78 + 1 ;else v78=v101[37 -(20 + 14) ];end elseif ((2429<2832) and (v102>(30 -9))) then local v171=0 + (0 -0) ;local v172;while true do if ((v171==0) or (841>(644 + 1569))) then v172=v101[2];v99[v172]=v99[v172](v13(v99,v172 + (2 -1) ,v101[8 -5 ]));break;end end elseif (v99[v101[3 -1 ]] or (2561==(5014 -(1292 + 79)))) then v78=v78 + 1 + 0 ;else v78=v101[1703 -(1256 + 444) ];end elseif ((2221>(1946 -(83 + 722))) and (v102<=24)) then if (((1226 -649)<(1858 -(367 + 482))) and (v102==(12 + 11))) then local v173=0;local v174;local v175;while true do if (((4979 -(109 + 355))>(2320 -1841)) and (v173==0)) then v174=0 -0 ;v175=nil;v173=1089 -(974 + (1681 -(1481 + 86))) ;end if ((1==v173) or ((279 -97)>=((9246 -3092) -4759))) then while true do if (((627 + 2153)==(10210 -7430)) and (v174==(1174 -(793 + 381)))) then v175=v101[969 -(790 + 177) ];v99[v175](v13(v99,v175 + 1 ,v101[1 + 2 ]));break;end end break;end end else local v176=0;local v177;local v178;while true do if ((v176==0) or (3769==882)) then v177=0 + 0 ;v178=nil;v176=481 -(103 + 377) ;end if (((3276 -1878)<=(4986 -(1605 + 77 + 36))) and (v176==(1596 -(991 + 604)))) then while true do if ((v177==(0 + 0)) or ((409 + 953)>1894)) then v178=v101[6 -4 ];v99[v178]=v99[v178]();break;end end break;end end end elseif ((1843<(305 + 2668)) and (v102<=(1971 -(14 + (3061 -(814 + 315)))))) then v99[v101[5 -3 ]]=v101[3 + 0 ];elseif ((((1296 + 612) -(593 + 560 + 4))<(3945 -2421)) and (v102>26)) then do return;end else v99[v101[1828 -(1032 + 794) ]][v101[2 + 1 ]]=v99[v101[4]];end elseif ((v102<=((874 + 762) -(1555 + 49))) or ((3313 -(249 + 430))<(746 + 322))) then if (((9152 -6357)>=((4316 -2632) -(461 + 77))) and (v102<=(50 -21))) then if ((v102==(43 -15)) or ((4097 -(898 + 148))>=3806)) then v99[v101[2]]();else v99[v101[2 -0 ]]=v101[1696 -(980 + 713) ]~=(0 + 0) ;end elseif ((v102<=((23 -18) + 25)) or ((1031 + 296)>(2552 + 1316))) then local v182=0;local v183;local v184;local v185;while true do if ((((110 + 3534) -2288)<(1675 + 1981)) and (v182==(1 + 0 + 0))) then v185=nil;while true do if (((801 + 496)<(873 + 3941)) and ((1 + 0)==v183)) then for v264=v184 + (1432 -(205 + 1226)) ,v101[4] do v185=v185   .. v99[v264] ;end v99[v101[2 + 0 ]]=v185;break;end if (((7477 -4422)>(559 + 516)) and (v183==(0 + 0))) then local v254=0;while true do if ((3375==(4374 -(755 + 244))) and (v254==(550 -(166 + 384)))) then v184=v101[2 + 1 ];v185=v99[v184];v254=1 + 0 ;end if ((v254==((2 -1) + 0)) or ((21858 -17117)==(1561 -963))) then v183=1 + 0 ;break;end end end end break;end if (((9643 -7327)>1568) and (v182==(1712 -(1688 + 24)))) then v183=0 + 0 ;v184=nil;v182=1;end end elseif ((v102>31) or ((4026 -1617)>(7024 -3276))) then v99[v101[2]]=v99[v101[3]];else v99[v101[2]]=v30(v94[v101[3]],nil,v42);end elseif ((v102<=(2 + 32)) or ((1910 -550)>=1543)) then if (((1122 + 2712)>=((9549 + 1526) -8804)) and (v102==33)) then local v186=0 + 0 ;local v187;local v188;while true do if ((v186==(272 -(158 + (519 -(36 + 369))))) or ((1185 -374)>1723)) then local v228=0 -0 ;while true do if ((v228==(2 -1)) or ((1893 + 1253)<=2353)) then v186=795 -(586 + 208) ;break;end if ((((907 + 1210) -755)>(64 + 405)) and (v228==(0 -(0 + 0)))) then v187=0 -0 ;v188=nil;v228=(2 + 0) -1 ;end end end if (((1375 -740)>((2534 -(1419 + 22)) -(344 + 521))) and (v186==(1 + 0))) then while true do if ((v187==((6560 -4726) -(59 + 1775))) or ((277 + 3561)<1132)) then v188=v101[4 -2 ];v99[v188]=v99[v188](v13(v99,v188 + 1 + 0 + 0 ,v79));break;end end break;end end else local v189=1197 -(529 + 504 + 164) ;local v190;local v191;local v192;while true do if ((v189==(810 -(647 + 162))) or ((18855 -14023)==575)) then v192=nil;while true do if ((2531>(2673 -(50 + 1468))) and (v190==((1662 -(1344 + 318)) + 0))) then local v257=0 + 0 ;while true do if ((2297<(3728 + 79)) and ((1125 -(495 + (1075 -(343 + 103))))==v257)) then v190=1 + 0 ;break;end if ((((1264 -(294 + 312)) -257)<=2518) and (v257==0)) then v191=v101[1592 -(669 + 921) ];v192={};v257=1;end end end if ((v190==(1 + 0)) or ((1824 -(92 + 1538))>=(2765 -(343 + 613)))) then for v265=2 -1 , #v98 do local v266=0;local v267;local v268;local v269;while true do if ((v266==(1992 -(486 + 1505))) or ((3961 -(1227 + 492))>(3868 -(303 + 91 + 344)))) then v269=nil;while true do if (((2276 + (8211 -6118))>=((9016 -5958) + 382)) and (v267==1)) then while true do if ((v268==(0 + 0)) or (1695<(1592 -(879 + (1091 -866))))) then v269=v98[v265];for v328=0, #v269 do local v329=0 + 0 ;local v330;local v331;local v332;while true do if (((4294 -((1597 -979) + 1201))>(1332 -(118 + 281))) and (v329==((0 -0) + 0))) then v330=v269[v328];v331=v330[1];v329=1 + 0 ;end if ((v329==(1 + (0 -0))) or ((1487 -(148 + 605))>(1462 -466))) then v332=v330[2 + 0 ];if (((v331==v99) and (v332>=v191)) or ((5657 -2707)>(6150 -(103 + 699 + 1054)))) then local v340=0;local v341;while true do if ((v340==(0 + 0)) or ((316 -(570 -443))>(144 + 4049))) then v341=0 -0 ;while true do if (((11401 -6740)>=(9507 -6418)) and (v341==((1144 -(44 + 1100)) + 0))) then v192[v332]=v331[v332];v330[2 -1 ]=v192;break;end end break;end end end break;end end end break;end end break;end if (((4190 -((3599 -1936) + 289))<(10643 -5704)) and (v267==0)) then local v312=1594 -(692 + 902) ;while true do if ((v312==(1970 -(231 + 1739))) or ((3812 -1525)<=(712 + 432))) then v268=0;v269=nil;v312=2 -1 ;end if ((v312==(3 -2)) or ((10755 -7799)>(15513 -10853))) then v267=1188 -(513 + 674) ;break;end end end end break;end if ((v266==((4775 -3206) -(1192 + 377))) or ((4457 -1726)>=4404)) then v267=0 -0 ;v268=nil;v266=1 + 0 ;end end end break;end end break;end if ((((13 + 4284) -2376)<4576) and ((0 -0)==v189)) then v190=0 -0 ;v191=nil;v189=3 -(1 + 1) ;end end end elseif (((4247 -(748 + 147))>793) and (v102<=(25 + 10))) then local v193=842 -(653 + 189) ;local v194;local v195;while true do if ((0==v193) or ((2999 -2247)>=(1204 + 684))) then v194=0 + 0 ;v195=nil;v193=2 -(1446 -(788 + 657)) ;end if ((1613==1613) and (v193==(1 + 0))) then while true do if ((v194==(137 -(134 + 3))) or ((2398 + 905)<(4439 -(449 + 1137)))) then v195=v99[v101[4]];if ( not v195 or (((3382 -2472) + 2881)<=(132 + 138))) then v78=v78 + (1 -0) ;else local v282=1975 -(440 + 1535) ;local v283;while true do if ((((3573 + 2490) -(1122 + 81))>(8760 -4685)) and ((0 + 0)==v282)) then v283=0 -0 ;while true do if (((7901 -3747)>((11066 -5393) -(475 + 1233))) and ((0 -0)==v283)) then v99[v101[2 -0 ]]=v195;v78=v101[3];break;end end break;end end end break;end end break;end end elseif ((v102>(154 -118)) or ((5725 -(265 + 744))<=(7051 -3611))) then if ((v99[v101[2]]~=v101[3 + 1 ]) or (1602>(4043 -(40 + 404)))) then v78=v78 + (3 -2) ;else v78=v101[10 -7 ];end else for v229=v101[904 -(814 + 88) ],v101[2 + 1 ] do v99[v229]=nil;end end v78=v78 + (2 -1) ;break;end end break;end end end end v77=3;end if (v77==0) then v78=1;v79= -1;v77=1;end end end;end end end return v30(v29(),{},v17)(...);end if (v18==3) then function v25()local v47=v24();local v48=v24();local v49=(1665 -(1152 + 512)) + 0 ;local v50=(v21(v48,(1183 -(551 + 631)) + (0 -0) ,1898 -(310 + (5221 -3653)) ) * (2^(871 -(162 + 677)))) + v47 ;local v51=v21(v48,47 -26 ,42 -11 );local v52=((v21(v48,56 -24 )==(1 -0)) and  -(1 + 0)) or (2 -1) ;if (v51==((820 -(294 + 526)) -0)) then if (v50==(0 -0)) then return v52 * (118 -(5 + 113)) ;else local v83=0 -0 ;while true do if (v83==(1234 -(1041 + 193))) then v51=1 -0 ;v49=0 + 0 ;break;end end end elseif (v51==(1750 + 297)) then return ((v50==(1955 -(1747 + (485 -(196 + 81))))) and (v52 * ((1 + 0)/((198 + 803) -(120 + 881))))) or (v52 * NaN) ;end return v8(v52,v51-(2638 -(899 + 716)) ) * (v49 + (v50/((8 -6)^(1283 -(658 + 573))))) ;end v26=nil;function v26(v53)local v54=0 -0 ;local v55;local v56;while true do if (v54==(1013 -(125 + 888))) then v55=nil;if  not v53 then local v86=(2930 -(811 + 232)) -(1228 + 659) ;while true do if (v86==(0 -0)) then v53=v24();if (v53==((648 -259) -(202 + 187))) then return "";end break;end end end v54=1;end if (v54==1) then v55=v3(v16,v19,(v19 + v53) -((4 -2) -1) );v19=v19 + v53 ;v54=2 + 0 ;end if (v54==(2 -0)) then v56={};for v84=2 -1 , #v55 do v56[v84]=v2(v1(v3(v55,v84,v84)));end v54=1537 -(1216 + 318) ;end if (v54==(9 -6)) then return v6(v56);end end end v27=v24;v18=4;end if (2==v18) then function v23()local v57,v58=v1(v16,v19,v19 + 2 + 0 );v19=v19 + 1 + 1 ;return (v58 * (483 -227)) + v57 ;end v24=nil;function v24()local v59,v60,v61,v62=v1(v16,v19,v19 + (661 -(104 + 554)) );v19=v19 + (717 -(255 + 458)) ;return (v62 * ((79815133 -36528735) -(26510544 -(1291 + 71)))) + (v61 * 65536) + (v60 * (187 + 25 + 44)) + v59 ;end v25=nil;v18=3;end if (1==v18) then function v21(v63,v64,v65)if v65 then local v69=(v63/((1 + 1)^(v64-1)))%((1 + 1)^(((v65-(358 -(352 + 5))) -(v64-((455 -363) -(78 + 13)))) + ((3266 -2134) -(575 + 556)))) ;return v69-(v69%(2 -1)) ;else local v70=2^(v64-(1 + 0 + 0)) ;return (((v63%(v70 + v70))>=v70) and (1 + 0)) or (303 -(265 + 38)) ;end end v22=nil;function v22()local v66=0 + 0 ;local v67;while true do if (v66==1) then return v67;end if (v66==((219 + 49) -(236 + 32))) then v67=v1(v16,v19,v19);v19=v19 + (2 -1) ;v66=686 -(270 + 415) ;end end end v23=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v68)if (v1(v68,2)==79) then local v71=0;while true do if (v71==0) then v20=v0(v3(v68,1,1));return "";end end else local v72=0;local v73;while true do if (v72==0) then v73=v2(v0(v68,16));if v20 then local v91=0;local v92;while true do if (v91==0) then v92=v5(v73,v20);v20=nil;v91=1;end if (v91==1) then return v92;end end else return v73;end break;end end end end);v21=nil;v18=1;end end end vv9(),...);end
